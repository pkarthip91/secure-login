{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/80009078karthiperumal/Desktop/web-engineer/web-engineer-app/src/app/api/getSecureWord/route.js"],"sourcesContent":["let store = new Map()\n\nexport async function POST(req) {\n  try {\n    const { username } = await req.json()\n    if (!username) return Response.json({ message: \"Username required\" }, { status: 400 })\n\n    const now = Date.now()\n    const existing = store.get(username)\n\n    if (existing && now - existing.issuedAt < 10000) {\n      return Response.json({ message: \"Try again in a few seconds\" }, { status: 429 })\n    }\n\n    const secureWord = Math.random().toString(36).slice(2, 8).toUpperCase()\n    store.set(username, { secureWord, issuedAt: now })\n\n    return Response.json({ secureWord, issuedAt: now })\n  } catch {\n    return Response.json({ message: \"Internal server error\" }, { status: 500 })\n  }\n}\n"],"names":[],"mappings":";;;AAAA,IAAI,QAAQ,IAAI;AAET,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QACnC,IAAI,CAAC,UAAU,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;QAAoB,GAAG;YAAE,QAAQ;QAAI;QAEpF,MAAM,MAAM,KAAK,GAAG;QACpB,MAAM,WAAW,MAAM,GAAG,CAAC;QAE3B,IAAI,YAAY,MAAM,SAAS,QAAQ,GAAG,OAAO;YAC/C,OAAO,SAAS,IAAI,CAAC;gBAAE,SAAS;YAA6B,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,MAAM,aAAa,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,WAAW;QACrE,MAAM,GAAG,CAAC,UAAU;YAAE;YAAY,UAAU;QAAI;QAEhD,OAAO,SAAS,IAAI,CAAC;YAAE;YAAY,UAAU;QAAI;IACnD,EAAE,OAAM;QACN,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACF","debugId":null}}]
}